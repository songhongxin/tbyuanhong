#!/usr/bin/expect --

#if { $argc != 4 } {
#    send_user "Usage:update_monitor <localhost> <user> <source name> <dest dir>\n"
#    exit
#}

#set DEST_DIR [lindex $argv 3]
#set LOCAL_SERVER [lindex $argv 0]
#set SRC_DIR [lindex $argv 2]
#set USER [lindex $argv 1]

stty -echo
puts "input password:"
expect_user -re "(.*)\n"
set PW "$expect_out(1,string)"
stty echo

#puts "you enter: $PW"

# turn off output default
#log_user 0

proc do_ssh {server passwd} {
	log_user 0
        spawn ssh $server
        set timeout 20
        expect {
                "*yes/no*" {send "yes\r"; exp_continue}
                "*assword*" {send "$passwd\r"; exp_continue}
                "*Enter passphrase*" {send "\r";exp_continue}
                "*]$ " {}
                -re "Permission denied (publickey,password).*|Name or service not known.*" {
                        puts "login $server failed!";
                        return "0"
                }
	}
	log_user 1
	return $spawn_id
}

proc do_ssh_exit {id} {
	set spawn_id $id	

	send  "exit\r"
	expect "*"
	close
	
}

proc do_cmd {id} {
	
#	global DEST_DIR LOCAL_SERVER SRC_DIR USER PW
	global PW
	set spawn_id $id
	
	log_user 0

	send "hostname\r"
	expect -re  ".*\\n(.*)\\n.*\\$ "
        
        # turn on output 
	log_user 1

	# trim the last char, it is "\r"...	
	set server [string range $expect_out(1,string) 0 end-1]
	puts "login to:  $server "

#	send "sudo -u admin scp -r $USER@$LOCAL_SERVER:$SRC_DIR $DEST_DIR\r"
#	send "ls /tmp\r"
	
	set fd [open commands r]

	while {[gets $fd line]!=-1} {
		set cmd [string trim $line]
		if {$cmd == "" || [string index $cmd 0] == "#"} {
			continue
		}
		send "$cmd\r"	
	        expect {
        	        "*assword*" {send "$PW\r"; exp_continue}
                	-re "lost connection.*|No such file or directory.*" {puts "scp to $server failded"; return}
            		"*yes/no*" {send "yes\r"; exp_continue}
			"*y*es, *:*" {send "y\n"; exp_continue}
			"*y/N*: *" {send "y\r"; exp_continue}
			"*]$*" {}
			"*=>*" {exp_continue}
			"*\n*" {exp_continue}
        	}
	}
	
	puts ""
	puts "process on $server over\n\n"
}


#set HOST [lindex $argv 0]
#set PASSWD [lindex $argv 1]
#set CUR_MACHINE 

# get password

#stty -echo
#puts "input password:\n"
#expect_user -re "(.*)\n"
#set PW "$expect_out(1,string)"
#stty echo

#puts "you enter: $PW"

set fd [open servers r]
while {[gets $fd line]!=-1} {

	set server  [string trim $line]	
	if { $server == "" || [string index $server 0] == "#"} {
		continue
	}	
#	log_user 0
	set myssh_id [do_ssh $server $PW]
#      	log_user 1
	if { $myssh_id == "0"} {
		exit
	}
	do_cmd $myssh_id
	do_ssh_exit $myssh_id
	
}
